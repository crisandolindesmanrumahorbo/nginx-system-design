
# user  nobody;
worker_processes  auto;

error_log  /Users/20058748/Documents/personal/system-design/nginx/log/startup.log;
error_log  /Users/20058748/Documents/personal/system-design/nginx/log/startup.log  notice;
error_log  /Users/20058748/Documents/personal/system-design/nginx/log/startup.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /Users/20058748/Documents/personal/system-design/nginx/log/main.log  main;
    error_log  /Users/20058748/Documents/personal/system-design/nginx/log/error.log;
    error_log  /Users/20058748/Documents/personal/system-design/nginx/log/error.log  notice;
    error_log  /Users/20058748/Documents/personal/system-design/nginx/log/error.log  info;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        # request dari port 80 dan server name localhost akan diconfig dibawah ini
        listen  80; 
        server_name localhost;

        location / {
            root   http://127.0.0.1:3000;
            index  /login;
        }

        location /info {
            default_type application/json;
            return 200 '{"status": "ok"}';
        }

        # meneruskan localhost:80/login menuju url dibawah
        location /login {
            proxy_pass http://127.0.0.1:8000/authentication/login;
        }

        location /logout {
            proxy_pass http://127.0.0.1:8000/authentication/logout;
        }

        # subrequest result - akan di reverse menuju /token utk di auth headernya
        location = /auth {
            internal;
            proxy_pass              http://127.0.0.1:8000/authentication/token;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }

        # subrequest result - akan perform variabel /auth untuk authentication sebelum di reverse ke ping
        location /todo {
            auth_request        /auth;
            proxy_pass          http://127.0.0.1:8001/todo;
        }

        location ~ /todo/(.*) {
            auth_request        /auth;
            proxy_pass          http://127.0.0.1:8001/todo/$1;
        }
    }

    server {
        listen       1111;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /Users/20058748/Downloads/nginx-example;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
